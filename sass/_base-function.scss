//方法與涵式

//rwd 與 hack================================================================

	@mixin rwd($max, $min: 0) { //自訂 RWD 寬度，第一個參數是最大值，第二個參數是最小值

		@if( $rwd==true) {
			$type: 'screen and (max-width: #{$max + 0px }) and (min-width: #{$min + 1px})';

			@media #{$type} {
				@content;
			}
		}
	}

	@mixin hack($key) { //查詢瀏覽器媒體，給 hack 用，$key 為 $hack 的 key

		@media #{map-get( $hack, $key )} {
			@content;
		}
	}

	@mixin media($key) { //查詢瀏覽器媒體，給 rwd 用，$key 為 $media 的 key

		@if( $rwd == true ) {

			@media #{map-get( $media, $key )} {
				@content;
			}
		}
	}

	@mixin supports($key) { //查詢瀏覽器媒體與瀏覽器支持，在不同情況下呈現不同樣式，$key 為 $supports 的 $key

		@supports #{ '(' + $key + ')' } {
			@content;
		}
	}

//狀態================================================================

	@mixin at($selector) { //在某個選擇器下的樣式，參數是選擇器

		#{$selector} & {
			@content;
		}
	}

	@mixin js( $boolean: true ) { //有/無 js下的樣式表現，$boolean 是布林值

		[data-js="#{$boolean}"] & {
			@content;
		}
	}

	@mixin admin( $boolean: true ) { //管理員/一般使用者 登入的樣式，$boolean 是布林值

		[data-admin="#{$boolean}"] & {
			@content;
		}
	}

//數量與框架================================================================

	@mixin default-min-len($type, $default-len, $max-len: $max-child) { //設定預設的最小單行數量，更多時會平均分割。$default-len 為預設的數量，$type 為 data-type 參數，$max-len 為最大的分割數量，超過時會以預設數量往下新增

		@if ( $type == 0 ) { // list 模組的狀況

			.ct {

				li {
					width: 100% / $default-len;
					display: inline-block;
					vertical-align: top;
				}

				@for $i from ( $default-len + 1 ) through $max-len { //group list 的 child

					[data-child="#{$i}"] {

						li {
							width: 100% / $i; //均分li
						}
					}
				}
			}

		}@else if( $type == 4 ) {

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> ul {

					> li {
						width: 100% / $default-len;
						display: inline-block;
						vertical-align: top;
					}

					@for $i from ( $default-len + 1 ) through $max-len { //group list 的 child

						&[data-child="#{$i}"] {

							> li {
								width: 100% / $i; //均分li
							}
						}
					}
				}
			}
		}@else { // group 的狀況

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> [data-index][data-type] {
					width: 100% / $default-len;
					float: left;
				}
			}

			@for $i from ( $default-len + 1) through $max-len { //group 的 child

				&[data-child="#{$i}"] {

					> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

						> [data-index][data-type] {
							width: 100% / $i; //均分li
						}
					}
				}
			}

		}
	}

	@mixin default-len($type, $len) { //設定預設的單行數量，$len 為預設的數量，$type 為 data-type 參數

		@if ( $type == 0 ) { // list 模組的狀況

			.ct {

				li {
					width: 100% / $len;
					display: inline-block;
					vertical-align: top;
				}
			}

		}@else if( $type == 4 ) {

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> ul {

					> li {
						width: 100% / $len;
						display: inline-block;
						vertical-align: top;
					}
				}
			}
		}@else { // 分割 group 的狀況

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> [data-index][data-type] {
					width: 100% / $len;
					float: left;

					&:nth-child(#{$len}n+1) {
						clear: left;
					}
				}
			}

		}
	}

	@mixin default-len-hide($type, $len) { //設定預設的單行數量，更多時會隱藏，$len 為預設的數量，$type 為 data-type 參數
		@include default-len($type, $len);

		@if ( $type == 0 ) { // list 模組的狀況

			.ct {

				li {

					&:nth-child(n+#{$len + 1}) {
						display: none;
					}

					$li: ' '; //以下都是 for ie8

					@for $i from 1 through $len { 

						$li: $li + '+ li '; 
					}

					&#{$li}{
						display: none;
					}
				}
			}

		}@else if( $type == 1 ) { // 分割 group 的狀況

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> [data-index][data-type] {

					&:nth-child(n+#{$len + 1}) {
						display: none;
					}

					$div: ' '; //以下都是 for ie8

					@for $i from 1 through $len {

						$div: $div + '+ [data-index][data-type] '; 
					}

					&#{$div}{
						display: none;
					}
				}
			}

		}@else if( $type == 4 ) {

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> ul {

					> li {

						&:nth-child(n+#{$len + 1}) {
							display: none;
						}

						$li: ' '; //以下都是 for ie8

						@for $i from 1 through $len {

							$li: $li + '+ li '; 
						}

						&#{$li}{
							display: none;
						}
					}
				}
			}
		}
	}

	@mixin average($type, $default-len: 4, $max-len: $max-child) { //平均分割物件的數量，若超過 $max-child，則隱藏起來，$type 為 data-type 參數

		@if ( $type == 0 ) { // list 模組的狀況

			.ct {

				li {
					max-width: 100% / $default-len;
					display: inline-block;
					vertical-align: top;
				}
			}

			.ct {

				ul {

					@for $i from 1 through $max-child {

						&[data-child="#{$i}"] { //自然分割

							li {
								width: ( 100% / $i );
							}
						}
					}
				}
			}

		}@else if( $type == 1 ) { // 分割 group 的狀況

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

				> [data-index][data-type] {
					max-width: 100% / $default-len;
					float: left;
				}
			}

			@for $i from 1 through $max-child {

				&[data-child="#{$i}"] { //自然分割

					> .in > .ct > .in {

						> [data-index][data-type] {
							width: 100% / $i;
						}
					}
				}
			}

		}@else if( $type == 4 ) {

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in > ul {

				> li {
					max-width: 100% / $default-len;
					display: inline-block;
					vertical-align: top;
				}
			}

			> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in > ul {

				@for $i from 1 through $max-child {

					&[data-child="#{$i}"] { //自然分割

						> li {
							width: ( 100% / $i );
						}
					}
				}
			}
		}
	}

	@mixin set-len($type, $max-len: $max-child) { //手動設定單行數量，$type 為 data-type 參數，$max-len 為 data-setLen 的最大數量

		@if ( $type == 0 ) { // list 模組的狀況

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] {

					.ct {

						li {
							width: 100% / $i;
							display: inline-block;
							vertical-align: top;
						}
					}
				}
			}

		}@else if( $type == 4 ) {

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] {

					> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

						> ul {

							> li {
								width: 100% / $i;
								display: inline-block;
								vertical-align: top;
							}
						}
					}
				}
			}

		}@else { // 分割 group 的狀況

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] {

					> .bg-drop-layout > .in > .ct > .in, > .in > .ct > .in {

						> [data-index][data-type] {
							width: 100% / $i;
							clear: none;

							&:nth-child(#{$i}n+1) {
								clear: left;
							}
						}
					}
				}
			}

		}
	}

	@mixin set-len-hide($type, $max-len: $max-child) { //手動設定單行數量，並且隱藏超過的，$type 為 data-type 參數，$max-len 為 data-setLen 的最大數量
		@include set-len($type, $max-len);

		@if ( $type == 0 ) { // list 模組的狀況

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] {

					.ct {

						li {

							&:nth-child(n+#{$i + 1}) {
								display: none;
							}

							$li: ' '; //以下都是 for ie8

							@for $j from 1 through $i {

								$li: $li + '+ li '; 
							}

							&#{$li}{
								display: none;
							}
						}
					}
				}
			}

		}@else if( $type == 1 ) { // 分割 group 的狀況

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] > .bg-drop-layout > .in > .ct > .in, &[data-setLen="#{$i}"] > .in > .ct > .in {

					> [data-index][data-type] {

						&:nth-child(n+#{$i + 1}) {
							display: none;
						}

						$li: ' '; //以下都是 for ie8

						@for $j from 1 through $i {

							$li: $li + '+ li '; 
						}

						&#{$li}{
							display: none;
						}
					}
				}
			}

		}@else if( $type == 4 ) {

			@for $i from 1 through $max-len { //算設定分割

				&[data-setLen="#{$i}"] > .bg-drop-layout > .in > .ct > .in, &[data-setLen="#{$i}"] > .in > .ct > .in {

					> ul {

						> li {

							&:nth-child(n+#{$i + 1}) {
								display: none;
							}

							$li: ' '; //以下都是 for ie8

							@for $j from 1 through $i {

								$li: $li + '+ li '; 
							}

							&#{$li}{
								display: none;
							}
						}
					}
				}
			}
		}
	}

	@mixin len-rwd($key, $len: 1, $int: 100%) { //手動設定 rwd 數量，$key 為 $media 的 key，$len 為 rwd 的數量，$int 是被計算的基數

		@if( $rwd == true ) {

			@media #{map-get( $media, $key )} {
				max-width: none !important;
				width: $int / $len !important;
				clear: none;

				&:nth-child(#{$len}n+1) {
					clear: left
				}
			}
		}
	}

//reset 重設樣式================================================================

	%reset-outer { //重新設定外部樣式
		margin: 0;
		position: static;
		top: auto;
		right: auto;
		bottom: auto;
		left: auto;
	}

	%reset-inner { //重新設定內部樣式
		padding: 0;
		border: 0;
		border-radius: 0;
		list-style: none;
		background-color: transparent;
		font-size: 1em;
		font-weight: normal;
		transition: initial;

		&:before {
			content: none;
		}

		&:after {
			content: none;
		}
	}

	%reset { //重新設定全部樣式
		@extend %reset-outer;
		@extend %reset-inner;
	}

//clear 清除浮動================================================================

	%clear { //偽類清除浮動的方法
		content: $content;
		display: block;
		height: 0;
		clear: both;
	}

//隱藏文字與...================================================================

	%hide-text { //隱藏文字的方法
		font: 0/0 a;
		color: transparent;
	}

	%ellipsis { //單行超過範圍文字變成'...'的方法
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	@mixin re-ellipsis() { //reset %ellipsis 的方法
		overflow: visible;
		text-overflow: clip;
		white-space: normal;
	}

	// %multi-ellipsis {
	// 	overflow: hidden;

	// 	&:before {
	// 		content: '\200B';
	// 		float: left;
	// 		width: 1px;
	// 	}

	// 	> * {
	// 		float: right;
	// 		width: 100%;
	// 		box-sizing: border-box;
	// 		margin-left: -1px;
	// 	}

	// 	&:after {
	// 		content: '...';
	// 		position: relative;
	// 		float: right;
	// 		left: 100%;
	// 		width: 50px;
	// 		margin-left: -50px;
	// 		margin-right: 1px;
	// 		text-indent: 30px;
	// 	}
	// }

	// @mixin multi-ellipsis($line: 6, $line-height: 20px, $background-color: $white, $position: 60% ){ //多行超過範圍文字變成'...'的方法

	// 	@extend %multi-ellipsis;
	// 	height: $line-height * $line;

	// 	&:before {
	// 		height: $line-height * $line;
	// 	}

	// 	> * {
	// 		line-height: $line-height;
	// 	}

	// 	&:after {
	// 		top: -1 * $line-height;
	// 		line-height: $line-height;
	// 		background-image: linear-gradient(to right, transparent 0, $background-color $position);
	// 	}
	// }

	@mixin multi-ellipsis($line: 4, $line-height: 25px ){ //多行超過範圍文字變成'...'的方法
		overflow: hidden;
		line-height: $line-height;
		height: $line-height * $line;
	}

	@mixin re-multi-ellipsis() { //reset %multi-ellipsis 的方法
		height: auto;
		overflow: visible;

		> * {
			float: none;
		}

		&:before, &:after {
			content: none;
		}
	}

//框架預設樣式================================================================

	%center { //齊中寬度
		margin: 0 auto;

		@if( $rwd ) {
			max-width: $pc-width;
		}@else {
			width: $pc-width;
		}
	}

	%area-module-no-header { //沒有 header 的首頁模組
		margin-top: $interval-s !important;

		> .in {

			> .hd {
				display: none !important;
			}
		}
	}

	%area-page-no-header { //沒有 header 的內頁模組
		margin-top: $interval-m !important;

		> .in {

			> .hd {
				display: none !important;
			}
		}
	}

	%area-mobile-no-header { //沒有 header 的手機側欄模組
		margin-top: $interval-m !important;

		> .in {

			> .hd {
				display: none !important;
			}
		}
	}

	%area-module { //首頁模組

		[data-index][data-type="0"], [data-index][data-type="2"], [data-index][data-type="4"] {

			> .in {
				margin-left: $interval-m;
				margin-right: $interval-m;
				@include media('mobile') {
					margin-left: 12px;
					margin-right: 12px;
				}
			}
		}

		[data-index][data-type] {

			> .in {
				margin-top: $interval-m;
				margin-bottom: $interval-m;
				@include media('mobile') {
					margin-top: 12px;
					margin-bottom: 12px;
				}
			}
		}

		[data-index][data-type] + .is-hide-header { //在首頁模組上下 ".is-hide-header" 的樣式

			> .in {
				@extend %area-module-no-header;
			}
		}
	}

	%area-page { //內頁模組

		[data-type] + [data-type] {
			//margin-top: $interval-xl;
			margin-top: 24px;
		}

		[data-type] + .is-hide-header { //在內頁模組上下 ".is-hide-header" 的 margin 樣式
			@extend %area-page-no-header;
		}
	}

	%area-mobile { //手機側欄模組

		[data-index][data-type="0"], [data-index][data-type="2"], [data-index][data-type="4"] {

			> .in {
				/*margin-top: $interval-m;
				margin-right: $interval-m;
				margin-bottom: $interval-m;
				margin-left: $interval-m;*/
				margin: 8px;
			}
		}

		.is-hide-header { //在手機側欄模組上下 ".is-hide-header" 的 margin 樣式

			> .in {
				@extend %area-mobile-no-header;
			}
		}
	}

//元件預設樣式================================================================

	%a { //顯示文字連結顏色
		$color: #08c;
		color: $color;
		text-decoration: underline;

		&:hover, &:focus {
			color: deeper($color);
			text-decoration: none;
		}
	}
	%border_line{
		min-height: 40px;
		border: 2px solid $major-color;
		border-radius: 20px;
		overflow: hidden;
		z-index: 2;
		position: relative;
		background-color: #FFF;
	}
	%header { //模組、內頁 title

		> .in {

		}

		h4, .h4, h3, .h3 {
			@extend %ellipsis;
			font-size: 1.2em;
			//padding-bottom: $interval-m;
			// border-bottom: $border;
			//margin-bottom: $interval-m;
			line-height: 40px;
			text-align: left;
			overflow: visible!important;
		}

		span {
			position: relative;
			&::before{
				content: "";
				display: block;
				position: absolute;
				bottom: -28px;
				left: 0;
				z-index: 1;
				width: 0;
				height: 0;
				border-style: solid;
				border-width: 20px 20px 0 0;
				border-color: $major-color transparent transparent transparent;				
			}
		}

		a {
			letter-spacing: 5px;
			font-weight: bold;
			position: relative;
			padding-left: 50px;
			position: relative;
			display: inline-block;
			padding-top: 2px;
			letter-spacing: 1px;
			padding-left: 40px;
			background-color: $major-color;
			border-radius: 20px 0 0 0;
			&::before{
				content: "";
				display: block;
				position: absolute;
				left: 16px;
				top: 0px;
				align-self: auto;
				width: 10px;
				height: 40px;
				background-image: image-url('icon-pic/icon-arrow.png');
				background-repeat: no-repeat;
				background-position: center;
				//background-color: $major-color;
				border-radius: 40px;
			}
			&::after{
				content: "";
				display: block;
				position: absolute;
				right: -60px;
				top: 0px;
				width: 0;
				height: 0;
				border-style: solid;
				border-width: 42px 0 0 60px;
				border-color: transparent transparent transparent $major-color;
			}
			@include media('mobile') {
				letter-spacing: 1px;
				font-size: 0.9em;
				&::before{
					left: 8px;
					top: 4px;
					width: 36px;
					height: 36px;
				}
			}
		}
	}

	%header_w { //模組、內頁 title 白字

		> .in {

		}

		h4, .h4, h3, .h3 {
			@extend %ellipsis;
		    font-size: 1.6em;
		    /* padding-bottom: 8px; */
		    /* margin-bottom: 8px; */
		    /* text-align: center; */
		    padding: 15px;
			font-weight: 600;


		}

		span {

		}

		a {
			letter-spacing: 5px;
			font-weight: bold;
			position: relative;
			padding-left: 50px;
			@include media('mobile') {
				letter-spacing: 1px;
				font-size: 0.9em;
				&::before{
					left: 8px;
					top: 4px;
					width: 36px;
					height: 36px;
				}
			}
		}
	}

	%caption { //標題組件
		@extend %ellipsis;
		margin-bottom: $interval-s;
		font-size: $font-size-l;
		font-weight: $font-weight-b;
		color: $title-color;

		span {
			
		}

		a {
			font-size: 1em;
		}
	}

	%label { //標籤組件
		margin: $interval-s 0;

		ul {

		}

		li {

		}

		span {

		}
	}

	%mark { //標籤組件
		display: inline-block;
		//padding: $btn-padding;
		padding: 6px 12px;
		//border: $btn-border;
		vertical-align: middle;
		color: $minor-color;
		font-size: 0.9em;
		background-color: $white;
		border: #969696 solid 1px;
		margin-right: $interval-s;
		border-radius: 8px;
		font-style: normal;
		// border-radius: $border-radius;
		
	}

	%mark-absolute { //延伸的標籤組件
		@extend %mark;
		position: absolute;
		bottom: $interval-m;
		left: $interval-m;
		z-index: 1;
	}

	%paragraph { //文章段落組件
		margin: $interval-s 0;

		p {
			
		}

		a {
			@extend %a;
		}

		span {

		}
	}

	%bg-arrow-btn {
		display: block;
		padding: 10px 15px;
		padding-right: 20px;
		border-radius: 100px;
		background-color: $black;
		background-color: rgba($black, $opacity-h);
		font-weight: $font-weight-b;
		font-size: $font-size-l;
		color: $white;
		transition: $transition;

		@include media('mobile') {
			font-size: $font-size-m;
		}

		&:hover {
			background-color: #000;
		}
		
		&:before {
			content: $content;
			display: inline-block;
			width: 31px;
			height: 31px;
			background-image: image-url('icon-pic/icon_playRight-white.png', false, false);
			background-position: center;
			background-repeat: no-repeat;
			margin-right: $interval-m;
			vertical-align: 6px;
		}
	}

	%arrow-btn {
		display: block;
		font-size: $font-size-l;
		font-weight: $font-weight-b;
		transition: $transition;

		@include media('mobile') {
			font-size: $font-size-m;
		}

		&:hover, &:focus {
			color: $minor-color;

			&:before {
				background-image: image-url('icon-pic/icon_playRight-orange.png', false, false);
			}
		}
		
		&:before {
			content: $content;
			display: inline-block;
			width: 31px;
			height: 31px;
			background-image: image-url('icon-pic/icon_playRight-gray.png', false, false);
			background-position: center;
			background-repeat: no-repeat;
			margin-right: $interval-m;
			vertical-align: 6px;
		}
	}

	%arrow-btn-white {
		display: block;
		font-size: $font-size-l;
		font-weight: normal;
		transition: $transition;
		color: $white;

		@include media('mobile') {
			font-size: $font-size-m;
		}

		&:hover {
			text-decoration: underline;

			&:before {
				background-image: image-url('icon-pic/icon_playRight-white.png', false, false);
			}
		}
		
		&:before {
			content: $content;
			display: inline-block;
			width: 31px;
			height: 31px;
			background-image: image-url('icon-pic/icon_playRight-white.png', false, false);
			background-position: center;
			background-repeat: no-repeat;
			margin-right: $interval-m;
			vertical-align: 6px;
		}
	}
	%display-flex {
		display:flex;
		align-items:center;
		justify-content:center;
	}
	%btn-Moema {
		cursor: pointer;
		display: flex; align-items: center; justify-content: center;
		vertical-align: middle;
		z-index: 1;
		-webkit-backface-visibility: hidden;
		-moz-osx-font-smoothing: grayscale;
		-webkit-transition: background-color 0.3s, color 0.3s;
		transition: background-color 0.3s, color 0.3s;
		&:focus {
			border: none;
			outline: none;
		}
		span{
			vertical-align: middle;
		}
		&::after {
			content: '';
			position: absolute;
			top: -20px;
			left: -20px;
			bottom: -20px;
			right: -20px;
			background: inherit;
			border-radius: 60px;
			z-index: -1;
			opacity: 0.4;
			-webkit-transform: scale3d(0.5, 0.5, 1);
			transform: scale3d(0.5, 0.5, 1);
		}
		&:focus,
		&:hover {
			background:none;
			text-shadow:none;
			box-shadow:none;
			-webkit-transition: background-color 0.1s 0.3s, color 0.1s 0.3s;
			transition: background-color 0.1s 0.3s, color 0.1s 0.3s;
			color: #ECEFF1;
			background-color: $major-color;
			-webkit-animation: anim-moema-1 0.3s forwards;
			animation: anim-moema-1 0.3s forwards;
			border: solid $major-color  1px;
		}

		&:focus:after,
		&:hover:after {/*水波*/
			-webkit-animation: anim-moema-2 0.3s 0.3s forwards;
			animation: anim-moema-2 0.3s 0.3s forwards;
		}
		@-webkit-keyframes anim-moema-1 {
			60% {
				-webkit-transform: scale3d(0.8, 0.8, 1);
				transform: scale3d(0.8, 0.8, 1);
			}
			85% {
				-webkit-transform: scale3d(1.1, 1.1, 1);
				transform: scale3d(1.1, 1.1, 1);
			}
			100% {
				-webkit-transform: scale3d(1, 1, 1);
				transform: scale3d(1, 1, 1);
			}
		}
		@keyframes anim-moema-1 {
			60% {
				-webkit-transform: scale3d(0.8, 0.8, 1);
				transform: scale3d(0.8, 0.8, 1);
			}
			85% {
				-webkit-transform: scale3d(1.1, 1.1, 1);
				transform: scale3d(1.1, 1.1, 1);
			}
			100% {
				-webkit-transform: scale3d(1, 1, 1);
				transform: scale3d(1, 1, 1);
			}
		}
		@-webkit-keyframes anim-moema-2 {
			to {
				opacity: 0;
				-webkit-transform: scale3d(1, 1, 1);
				transform: scale3d(1, 1, 1);
			}
		}
		@keyframes anim-moema-2 {
			to {
				opacity: 0;
				-webkit-transform: scale3d(1, 1, 1);
				transform: scale3d(1, 1, 1);
			}
		}

	}
	%btn { //按鈕組件
		display: inline-block;
		padding: 18.5px 16px;
		border: 0!important;
		box-sizing: border-box;
		line-height: 1;
		text-align: center;
		vertical-align: middle;
		color: $black;
		cursor: pointer;
		font-size: 1.2em;
		text-decoration: none;
		background-color: $btn-bg-color;
		transition: $transition;
		border-radius: $border-radius;
		font-weight: bold;
		
		@extend %btn-Moema;

		&:link {
			color: $black;
		}

		&:visited {
			color: $black;
		}

		&:hover, &:focus {
			color: $white;
			border-color: #ff6f61;
			background-color: #ff6f61;
		}

		&:active {
			color: $black;
		}
	}

	%btn-s { //小按鈕組件
		@extend %btn;
		//padding: $btn-padding;
		//font-size: $font-size-s;
		padding: 16px 20px;
		font-size: 1em;
	}

	%btn-imp { // important 重要的按鈕組件
		background-color: $minor-color;
		color: $white;
		&:hover, &:focus {
			background-color: deeper($minor-color);
		}
	}
	%btn-tool { // tool 內頁 icon工具列
		display: block;
		cursor: pointer;
		box-sizing: border-box;
		width: 38px;
		height: 38px;
		border-radius: $border-radius;
		background-repeat: no-repeat;
		background-position: center;
		transition: $transition;
		font-size: .5em;
		text-align: center;
		line-height: 2.3em;
		font-weight: bold;
		background-color: #fcfcfc;
		border: 1px solid $gray;
		border-radius: 40px;
		padding: 5px 0;
		//letter-spacing: -1px;
		//font-family: $number-font-style;
		//color: $major-color;
		background-size: cover;
		box-shadow: rgba(217,214,210,1) 0 0px 3px,
				inset rgba(255,255,255,1) 1px 1px 3px;
		/*-moz-transition: all .4s ease-out;
		-webkit-transition: all .4s ease-out;
		-ms-transition: all .4s ease-out;
		-o-transition: all .4s ease-out;*/
		transition: all .4s ease-out;
		&:hover, &:focus {
			background-color: $light;
			border: 1px solid rgba(217,214,210,1);
			box-shadow:rgba(217,214,210,1) 0 0px 3px;
			/*-moz-transform:scale(1.2);
			-webkit-transform:scale(1.2);
			-o-transform:scale(1.2);
			-ms-transform:scale(1.2);*/
			transform:scale(1.2);
		}
	}
	%input { //輸入框組件
		//padding: $input-padding;
		border: $input-border;
		box-sizing: border-box;
		background-color: $input-bg-color;
		vertical-align: middle;
		box-sizing: border-box;
		padding: 6px 12px;
		line-height: 1.6em;
		border-radius: 20px;
	}

	%article { //文章區塊組件
		line-height: $line-height-m;
		
		a {
			@extend %a;
		}

		img {
			max-width: 100%;
		}
	}

	%article-extend { //延伸的文章區塊組件
		@extend %article;
	}

	%footer { //footer 按鈕
		margin-top: $interval-s;

		> .in {

		}

		ul {
			text-align: right;
		}

		li {
			display: inline-block;

			+ li {
				margin-left: $interval-xs;
			}
		}

		span {
			display: block;
			background-image: none !important;
		}

		a {
			@extend %btn-s;
		}
	}

	%list { //列表樣式
		display: block;
		padding: $interval-m;
		transition: $transition;
	}

	%list-hover { //列表 :hover 樣式

		&:hover, &:focus {
			color: $white;
			background-color: $hover-color;
			.mark{
				color: $hover-color;
				background-color: $white;
			}
		}
	}

//快速取用樣式================================================================

	%mask { //圖片遮罩
		position: relative;
		display: block;

		&:after {
			content: $content;
			display: block;
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;
			background-color: transparent;
			transition: $transition;
		}

		&:hover, &:focus {

			&:after {
				background-color: $black;
				background-color: rgba($black, $opacity-l);
			}
		}
	}

	%mask-link { //圖片遮罩
		position: absolute;
		display: block;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
	}

//背景與圖示================================================================

	%bg-cover { // cover 底圖
		background-position: center;
		background-repeat: no-repeat;
		background-size: cover;
	}

	%bg-contain { // contain 底圖
		background-position: center;
		background-repeat: no-repeat;
		background-size: contain;
	}

	%icon { //偽類作為行內icon的方法
		content: $content;
		display: inline-block;
		vertical-align: middle;
	}

	%icon-pic { //偽類作為行內icon-pic的方法，請參閱 /bace/icon-pic
		content: $content;
		display: inline-block;
		vertical-align: middle;
	}

	%icon-font { //偽類作為行內icon-font的方法，請參閱 /bace/icon-font
		font-family: 'icomoon';
		speak: none;
		font-style: normal;
		font-weight: normal;
		font-variant: normal;
		text-transform: none;
		line-height: 1;
		display: inline-block;
		vertical-align: baseline;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
	}

	@mixin bg-to-pic($img-src, $size: true, $height: null) { //依圖改變大小並置中，$img-src為圖片檔名，$size為false就不匯出寬高，參數為數字就會出指定倍數大小，$size為數字帶單位就會匯出指定大小，若指定$height就會當作高度使用
		background-image: image-url($img-src);
		background-repeat: no-repeat;
		background-position: center;

		@if( $size == true ) { //如果是 true 就匯出大小
			width: image-width($img-src);
			height: image-height($img-src);

		} @else if( $size == false ) { //如果是 false 就不匯出大小
			
		} @else { //如果是數字就會出指定大小
			background-size: contain;

			@if( $height != null ) { //如果有 $height 就給高
				
				@if( unitless($height) ) { //沒單位就是倍數
					height: round( image-height($img-src) * $height);

				} @else { //有單位就直接使用
					height: $height;
				}

			} @else { //如果沒 $height ，高度就是 $size
				
				@if( unitless($size) ) { //沒單位就是倍數
					height: round( image-height($img-src) * $size);

				} @else { //有單位就直接使用
					height: $size;
				}
			}

			@if( unitless($size) ) { //沒單位就是倍數
				width: round( image-width($img-src) * $size);

			} @else { //有單位就直接使用
				width: $size;
			}
		}
	}

	@mixin icon-pic($img-name, $size: true, $height: null) { //取雪碧圖icon，$img-name為圖片檔名，$size為false就不匯出寬高，$size為數字就會出指定倍數大小，$size為數字帶單位就會出指定指定大小，若指定第$height就會當作高度使用

		@if( str-index( $img-name, '.png') ) { //如果有副檔名就拿掉
			$img-name: str-slice( $img-name, 1, str-index( $img-name, '.png') - 1);
		}

		@extend %icon-pic;

		@if( $size == true ) { //如果是 true 就匯出大小並使用sprites圖片

			@if($debug) {
				@extend .icon-pic-#{ $img-name };
			}@else {
				@extend .icon-pic-#{ $img-name } !optional;
			}
			
			width: image-width('icon-pic/#{$img-name}.png');
			height: image-height('icon-pic/#{$img-name}.png');

		} @else {
			@include bg-to-pic('icon-pic/#{$img-name}.png', $size, $height);
		}
	}

	@mixin icon-font($font) { //文字圖示，列表請參閱 https://icomoon.io/
		
		@extend %icon-font;

		@if($debug) {
			@extend %icon-font-#{$font};
		}@else {
			@extend %icon-font-#{$font} !optional;
		}

		font-size: $icon-font-size;
		color: $icon-font-color;
	}

	@mixin icon-pic-btn($img-name, $size: true, $height: null) { //只有icon圖片的按鈕，隱含佔用了 :before
		@extend %hide-text;
		display: inline-block;

		&:before{
			@include icon-pic( $img-name, $size, $height );
			display: block !important;
		}
	}